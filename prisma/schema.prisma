// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Patient {
  id           Int          @id @default(autoincrement())
  firstName    String
  lastName     String
  dateOfBirth  DateTime
  gender       String
  phone        String
  email        String
  address      String
  appointments Appointment[]
  attendances  Attendance[]
}

model Employee {
  id           Int          @id @default(autoincrement())
  firstName    String
  lastName     String
  role         String
  phone        String
  email        String
  appointments Appointment[]
  attendances  Attendance[]
}

model Appointment {
  id            Int          @id @default(autoincrement())
  patientId     Int
  employeeId    Int
  appointmentDate DateTime
  diagnosis     String?
  notes         String?
  patient       Patient      @relation(fields: [patientId], references: [id])
  employee      Employee     @relation(fields: [employeeId], references: [id])
  prescriptions Prescription[]
}

model Prescription {
  id            Int          @id @default(autoincrement())
  appointmentId Int
  medicationName String
  dosage        String
  instructions  String?
  appointment   Appointment  @relation(fields: [appointmentId], references: [id])
}

model Attendance {
  id            Int          @id @default(autoincrement())
  patientId     Int
  employeeId    Int
  urgencyLevel  UrgencyLevel
  observations  String?
  patient       Patient      @relation(fields: [patientId], references: [id])
  employee      Employee     @relation(fields: [employeeId], references: [id])
}

enum UrgencyLevel {
  Low
  Medium
  High
  Emergency
}